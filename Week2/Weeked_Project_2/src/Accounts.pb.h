// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Accounts.proto

#ifndef PROTOBUF_INCLUDED_Accounts_2eproto
#define PROTOBUF_INCLUDED_Accounts_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Accounts_2eproto 

namespace protobuf_Accounts_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Accounts_2eproto
class PBAccount;
class PBAccountDefaultTypeInternal;
extern PBAccountDefaultTypeInternal _PBAccount_default_instance_;
class PBAccounts;
class PBAccountsDefaultTypeInternal;
extern PBAccountsDefaultTypeInternal _PBAccounts_default_instance_;
namespace google {
namespace protobuf {
template<> ::PBAccount* Arena::CreateMaybeMessage<::PBAccount>(Arena*);
template<> ::PBAccounts* Arena::CreateMaybeMessage<::PBAccounts>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class PBAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBAccount) */ {
 public:
  PBAccount();
  virtual ~PBAccount();

  PBAccount(const PBAccount& from);

  inline PBAccount& operator=(const PBAccount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBAccount(PBAccount&& from) noexcept
    : PBAccount() {
    *this = ::std::move(from);
  }

  inline PBAccount& operator=(PBAccount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAccount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBAccount* internal_default_instance() {
    return reinterpret_cast<const PBAccount*>(
               &_PBAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PBAccount* other);
  friend void swap(PBAccount& a, PBAccount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBAccount* New() const final {
    return CreateMaybeMessage<PBAccount>(NULL);
  }

  PBAccount* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBAccount>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBAccount& from);
  void MergeFrom(const PBAccount& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string dateOpened = 4;
  void clear_dateopened();
  static const int kDateOpenedFieldNumber = 4;
  const ::std::string& dateopened() const;
  void set_dateopened(const ::std::string& value);
  #if LANG_CXX11
  void set_dateopened(::std::string&& value);
  #endif
  void set_dateopened(const char* value);
  void set_dateopened(const char* value, size_t size);
  ::std::string* mutable_dateopened();
  ::std::string* release_dateopened();
  void set_allocated_dateopened(::std::string* dateopened);

  // string SSN = 5;
  void clear_ssn();
  static const int kSSNFieldNumber = 5;
  const ::std::string& ssn() const;
  void set_ssn(const ::std::string& value);
  #if LANG_CXX11
  void set_ssn(::std::string&& value);
  #endif
  void set_ssn(const char* value);
  void set_ssn(const char* value, size_t size);
  ::std::string* mutable_ssn();
  ::std::string* release_ssn();
  void set_allocated_ssn(::std::string* ssn);

  // float balance = 1;
  void clear_balance();
  static const int kBalanceFieldNumber = 1;
  float balance() const;
  void set_balance(float value);

  // int32 accountNum = 3;
  void clear_accountnum();
  static const int kAccountNumFieldNumber = 3;
  ::google::protobuf::int32 accountnum() const;
  void set_accountnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBAccount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr dateopened_;
  ::google::protobuf::internal::ArenaStringPtr ssn_;
  float balance_;
  ::google::protobuf::int32 accountnum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Accounts_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBAccounts : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBAccounts) */ {
 public:
  PBAccounts();
  virtual ~PBAccounts();

  PBAccounts(const PBAccounts& from);

  inline PBAccounts& operator=(const PBAccounts& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBAccounts(PBAccounts&& from) noexcept
    : PBAccounts() {
    *this = ::std::move(from);
  }

  inline PBAccounts& operator=(PBAccounts&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAccounts& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBAccounts* internal_default_instance() {
    return reinterpret_cast<const PBAccounts*>(
               &_PBAccounts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PBAccounts* other);
  friend void swap(PBAccounts& a, PBAccounts& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBAccounts* New() const final {
    return CreateMaybeMessage<PBAccounts>(NULL);
  }

  PBAccounts* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBAccounts>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBAccounts& from);
  void MergeFrom(const PBAccounts& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBAccounts* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBAccount accounts = 1;
  int accounts_size() const;
  void clear_accounts();
  static const int kAccountsFieldNumber = 1;
  ::PBAccount* mutable_accounts(int index);
  ::google::protobuf::RepeatedPtrField< ::PBAccount >*
      mutable_accounts();
  const ::PBAccount& accounts(int index) const;
  ::PBAccount* add_accounts();
  const ::google::protobuf::RepeatedPtrField< ::PBAccount >&
      accounts() const;

  // @@protoc_insertion_point(class_scope:PBAccounts)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBAccount > accounts_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Accounts_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBAccount

// float balance = 1;
inline void PBAccount::clear_balance() {
  balance_ = 0;
}
inline float PBAccount::balance() const {
  // @@protoc_insertion_point(field_get:PBAccount.balance)
  return balance_;
}
inline void PBAccount::set_balance(float value) {
  
  balance_ = value;
  // @@protoc_insertion_point(field_set:PBAccount.balance)
}

// string name = 2;
inline void PBAccount::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBAccount::name() const {
  // @@protoc_insertion_point(field_get:PBAccount.name)
  return name_.GetNoArena();
}
inline void PBAccount::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBAccount.name)
}
#if LANG_CXX11
inline void PBAccount::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBAccount.name)
}
#endif
inline void PBAccount::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBAccount.name)
}
inline void PBAccount::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBAccount.name)
}
inline ::std::string* PBAccount::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PBAccount.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBAccount::release_name() {
  // @@protoc_insertion_point(field_release:PBAccount.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBAccount::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PBAccount.name)
}

// int32 accountNum = 3;
inline void PBAccount::clear_accountnum() {
  accountnum_ = 0;
}
inline ::google::protobuf::int32 PBAccount::accountnum() const {
  // @@protoc_insertion_point(field_get:PBAccount.accountNum)
  return accountnum_;
}
inline void PBAccount::set_accountnum(::google::protobuf::int32 value) {
  
  accountnum_ = value;
  // @@protoc_insertion_point(field_set:PBAccount.accountNum)
}

// string dateOpened = 4;
inline void PBAccount::clear_dateopened() {
  dateopened_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBAccount::dateopened() const {
  // @@protoc_insertion_point(field_get:PBAccount.dateOpened)
  return dateopened_.GetNoArena();
}
inline void PBAccount::set_dateopened(const ::std::string& value) {
  
  dateopened_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBAccount.dateOpened)
}
#if LANG_CXX11
inline void PBAccount::set_dateopened(::std::string&& value) {
  
  dateopened_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBAccount.dateOpened)
}
#endif
inline void PBAccount::set_dateopened(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dateopened_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBAccount.dateOpened)
}
inline void PBAccount::set_dateopened(const char* value, size_t size) {
  
  dateopened_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBAccount.dateOpened)
}
inline ::std::string* PBAccount::mutable_dateopened() {
  
  // @@protoc_insertion_point(field_mutable:PBAccount.dateOpened)
  return dateopened_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBAccount::release_dateopened() {
  // @@protoc_insertion_point(field_release:PBAccount.dateOpened)
  
  return dateopened_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBAccount::set_allocated_dateopened(::std::string* dateopened) {
  if (dateopened != NULL) {
    
  } else {
    
  }
  dateopened_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dateopened);
  // @@protoc_insertion_point(field_set_allocated:PBAccount.dateOpened)
}

// string SSN = 5;
inline void PBAccount::clear_ssn() {
  ssn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBAccount::ssn() const {
  // @@protoc_insertion_point(field_get:PBAccount.SSN)
  return ssn_.GetNoArena();
}
inline void PBAccount::set_ssn(const ::std::string& value) {
  
  ssn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBAccount.SSN)
}
#if LANG_CXX11
inline void PBAccount::set_ssn(::std::string&& value) {
  
  ssn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBAccount.SSN)
}
#endif
inline void PBAccount::set_ssn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ssn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBAccount.SSN)
}
inline void PBAccount::set_ssn(const char* value, size_t size) {
  
  ssn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBAccount.SSN)
}
inline ::std::string* PBAccount::mutable_ssn() {
  
  // @@protoc_insertion_point(field_mutable:PBAccount.SSN)
  return ssn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBAccount::release_ssn() {
  // @@protoc_insertion_point(field_release:PBAccount.SSN)
  
  return ssn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBAccount::set_allocated_ssn(::std::string* ssn) {
  if (ssn != NULL) {
    
  } else {
    
  }
  ssn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ssn);
  // @@protoc_insertion_point(field_set_allocated:PBAccount.SSN)
}

// -------------------------------------------------------------------

// PBAccounts

// repeated .PBAccount accounts = 1;
inline int PBAccounts::accounts_size() const {
  return accounts_.size();
}
inline void PBAccounts::clear_accounts() {
  accounts_.Clear();
}
inline ::PBAccount* PBAccounts::mutable_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:PBAccounts.accounts)
  return accounts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PBAccount >*
PBAccounts::mutable_accounts() {
  // @@protoc_insertion_point(field_mutable_list:PBAccounts.accounts)
  return &accounts_;
}
inline const ::PBAccount& PBAccounts::accounts(int index) const {
  // @@protoc_insertion_point(field_get:PBAccounts.accounts)
  return accounts_.Get(index);
}
inline ::PBAccount* PBAccounts::add_accounts() {
  // @@protoc_insertion_point(field_add:PBAccounts.accounts)
  return accounts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAccount >&
PBAccounts::accounts() const {
  // @@protoc_insertion_point(field_list:PBAccounts.accounts)
  return accounts_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Accounts_2eproto
